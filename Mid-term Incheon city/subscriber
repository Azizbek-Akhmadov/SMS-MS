#!/usr/bin/env python

import rospy
from std_msgs.msg import Float32, String
from dynamic_reconfigure.client import Client

def callback(data):
    if data.data > speed_limit:
        rospy.loginfo(rospy.get_caller_id() + " Speed: %f exceeds limit", data.data)
        client = Client("speed_monitor", timeout=30)
        config = {"plate_number": "ABC123"}
        client.update_configuration(config)
    else:
        rospy.loginfo(rospy.get_caller_id() + " Speed: %f is within limit", data.data)

def speed_monitor():
    rospy.init_node('speed_monitor', anonymous=True)
    rospy.Subscriber("speed_topic", Float32, callback)
    rospy.spin()

if __name__ == '__main__':
    try:
        speed_limit = rospy.get_param('~speed_limit')
        speed_monitor()
    except rospy.ROSInterruptException:
        pass
